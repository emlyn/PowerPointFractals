;; Copyright (c) 2024 Emlyn Corrin.
;; This work is licensed under the terms of the MIT license.
;; For a copy, see <https://opensource.org/license/MIT>.

{:paths ["./scripts/"]
 :deps {metosin/malli {:mvn/version "0.17.0"}
        rm-hull/infix {:mvn/version "0.4.4"}
        org.babashka/http-server {:mvn/version "0.1.13"}}
 :tasks {check {:doc "Checks that all PowerPoints have been converted to PNGs"
                :task (exec 'tasks/check)
                :exec-args {:dir "docs/assets/fractals"
                            :tracked-only true
                            :check-modified false}}
         outdated {:doc "Check for outdated dependencies"
                   :task (exec 'outdated/check-outdated)
                   :exec-args {:deps-file "bb.edn"}}
         build {:doc "Builds the site (use --show-args to see args passed to template)"
                :task (exec 'tasks/build-site)
                ;; NOTE: :extra-paths must include the :exec-args :templates path
                :extra-paths ["resources/templates"]
                :exec-args {:dir "docs/assets/fractals"
                            :templates "resources/templates"
                            :template-args {:raw-root "assets/fractals"}
                            :output "docs"}}
         serve {:doc "Serve website locally"
                :requires ([babashka.http-server :as server])
                :task (server/exec {:port 8000 :dir "docs"})}
         dim {:doc "Calculate the fractal dimension of an image"
              :task (exec 'tasks/calc-dimension)
              :exec-args {:size 1
                          :dmin 0
                          :dmax 4}}
         eval {:doc "Evaluate a mathematical expression"
               :task (exec 'tasks/eval-string)}
         repl {:doc "Start a repl in the tasks namespace"
               :override-builtin true
               :task (do
                       (require 'tasks)
                       (in-ns 'tasks)
                       (clojure.main/repl))}
         rename {:doc "Rename a fractal file"
                 :task (exec 'tasks/rename)}
         pre-commit {:doc "Tasks to run before committing"
                     :depends [check]}
         install-pre-commit {:doc "Installs pre-commit hooks"
                             :task (exec 'tasks/install-pre-commit)}}}
